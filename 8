def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(25):
        var9 = var7.func3
        var9(arg2, arg1)
    var27 = func6(arg1, arg2)
    var30 = class9()
    for var31 in range(6):
        var30.func10(arg1, arg2)
    result = (var27 | -1007515170 ^ ((-1119133524 | arg1) + arg2)) | -1412755971
    return result
class class9(object):
    def func10(self, arg28, arg29):
        result = -1 & (-197721677 ^ (-1163108261 ^ 572982141 + 0) + arg28) + -1
        return result
def func6(arg10, arg11):
    var16 = func7(arg11, arg10)
    var21 = func8(var16, arg10)
    var22 = (arg11 & var16 | var16 ^ var16 - var21 | ((var16 + var16 & var21 - 626 ^ var21) - (arg10 + ((arg10 - var21 + -5 & var21 | var16 & 97) + var21) + -1531041887) ^ var16) | var21) | var16
    var23 = -154 - var22 - var21 - (((arg10 - var22 ^ var16) + 38871291) + (var16 & (var21 - arg10) - 362) ^ ((var21 ^ var16) + arg10 | arg10 + -1213211319 + ((1106896897 | -375) - arg11) ^ var22 & arg10) | arg10)
    var24 = -1516330773 - arg10
    var25 = var24 - (var22 ^ var23 | (-2020221405 - (arg10 | (var24 + var21)))) - var21
    var26 = (982086380 & -408687751) & (arg11 | var21) | var24
    result = 490 + var24 ^ 442
    return result
def func8(arg17, arg18):
    var19 = 0
    for var20 in xrange(45):
        var19 += arg18 - var20
    return var19
def func7(arg12, arg13):
    var14 = (arg12 + -890 ^ 1533018206 + arg12) | arg13
    var15 = 727 | var14
    result = (((arg13 & var14) ^ var14 - (var14 | -2145316543)) ^ arg13 + arg12 + arg12) ^ ((878360021 | arg13) ^ var15 ^ 877380585)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(object):
    def func3(self, arg3, arg4):
        result = arg4 + arg3 & 1893210451 | (arg4 ^ 1) ^ -328302052 - -1179279233
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 32'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
